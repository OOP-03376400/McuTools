<!-- *****************************************************************************
 *    Project   : Awesomium.NET (TabbedWPFSample)
 *    File      : SplitButton.xaml
 *    Version   : 1.7.0.0 
 *    Date      : 3/11/2013
 *    Author    : Perikles C. Stephanidis (perikles@awesomium.com)
 *    Copyright : (C)2013 Awesomium Technologies LLC
 *    
 *    This code is provided "AS IS" and for demonstration purposes only,
 *    without warranty of any kind.
 *     
 *********************************************************************************
 *
 *    Notes     :
 *
 *    
 *    
 *    
 ***************************************************************************** -->

<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:TabbedWPFSample">

    <Style TargetType="{x:Type local:SplitButton}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SplitButton}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button 
                                x:Name="PART_ActionButton" 
                                Margin="0" 
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                Padding="{TemplateBinding Padding}" 
                                local:SplitButton.CornerRadius="5,0,0,5" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="Gray">
                                <ContentPresenter 
                                    Name="ActionButtonContent" 
                                    Margin="{TemplateBinding Padding}" 
                                    Content="{TemplateBinding Content}" 
                                    ContentTemplate="{TemplateBinding ContentTemplate}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    RecognizesAccessKey="true"/>
                            </Button>
                            <ToggleButton 
                                x:Name="PART_ToggleButton" 
                                Grid.Column="1" 
                                IsTabStop="False" 
                                IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                IsHitTestVisible="True" 
                                local:SplitButton.CornerRadius="0,5,5,0" 
                                BorderBrush="Gray" 
                                Background="{TemplateBinding Background}"
                                BorderThickness="0,1,1,1">
                                <Grid x:Name="arrowGlyph" IsHitTestVisible="False" Margin="4,3,4,3">
                                    <Path 
                                        x:Name="Arrow" 
                                        Width="7" 
                                        Height="4" 
                                        Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z" 
                                        Fill="#FF000000"/>
                                </Grid>
                            </ToggleButton>
                        </Grid>
                        <Popup 
                            x:Name="PART_Popup" 
                            HorizontalOffset="1" 
                            VerticalOffset="1" 
                            AllowsTransparency="True" 
                            StaysOpen="False" 
                            Placement="Bottom" 
                            Focusable="False" 
                            IsOpen="{Binding IsChecked, ElementName=PART_ToggleButton, Mode=TwoWay}">
                            <Border BorderThickness="1">
                                <ContentPresenter 
                                    x:Name="PART_ContentPresenter" 
                                    Content="{TemplateBinding DropDownContent}"/>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF" />
                        </Trigger>
                        <Trigger Property="IsOpen" Value="True">
                            <Setter Property="IsHitTestVisible" TargetName="PART_ToggleButton" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>